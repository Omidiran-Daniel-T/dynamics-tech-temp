{"ast":null,"code":"var Airtable = require(\"airtable\");\n\nvar base = new Airtable({\n  apiKey: \"keyXPG78PwXOJrDng\"\n}).base(\"appMPBJSSa0nNGRQO\");\n\nexports.getAllUsers = () => {\n  let data = [];\n  base(\"user\").select({\n    view: \"Grid view\"\n  }).eachPage(function page(records, fetchNextPage) {\n    records.forEach(function (record) {\n      let email = record.get(\"email\");\n      let password = record.get(\"password\");\n      data.push({\n        email,\n        password\n      });\n    });\n    fetchNextPage();\n  }, function done(err) {\n    if (err) {\n      console.error(err);\n      return \"error\";\n    }\n\n    console.log(data);\n    return data;\n  });\n};\n\nexports.login = (e, p) => {\n  let isValid = false;\n  base(\"user\").select({\n    view: \"Grid view\"\n  }).eachPage(function page(records, fetchNextPage) {\n    records.forEach(function (record) {\n      if (record.get(\"email\") === e) if (record.get(\"password\") === p) isValid = true;\n    });\n    fetchNextPage();\n  }, function done(err) {\n    if (err) {\n      console.error(err);\n      return \"error\";\n    }\n\n    console.log(isValid);\n  });\n  console.log(isValid);\n  return isValid;\n};","map":{"version":3,"sources":["C:/Users/Daniel/Documents/projects/react/dynamics-tech/src/logic.js"],"names":["Airtable","require","base","apiKey","exports","getAllUsers","data","select","view","eachPage","page","records","fetchNextPage","forEach","record","email","get","password","push","done","err","console","error","log","login","e","p","isValid"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIC,IAAI,GAAG,IAAIF,QAAJ,CAAa;AAAEG,EAAAA,MAAM,EAAE;AAAV,CAAb,EAA8CD,IAA9C,CACT,mBADS,CAAX;;AAIAE,OAAO,CAACC,WAAR,GAAsB,MAAM;AAC1B,MAAIC,IAAI,GAAG,EAAX;AACAJ,EAAAA,IAAI,CAAC,MAAD,CAAJ,CACGK,MADH,CACU;AACNC,IAAAA,IAAI,EAAE;AADA,GADV,EAIGC,QAJH,CAKI,SAASC,IAAT,CAAcC,OAAd,EAAuBC,aAAvB,EAAsC;AACpCD,IAAAA,OAAO,CAACE,OAAR,CAAgB,UAAUC,MAAV,EAAkB;AAChC,UAAIC,KAAK,GAAGD,MAAM,CAACE,GAAP,CAAW,OAAX,CAAZ;AACA,UAAIC,QAAQ,GAAGH,MAAM,CAACE,GAAP,CAAW,UAAX,CAAf;AACAV,MAAAA,IAAI,CAACY,IAAL,CAAU;AAAEH,QAAAA,KAAF;AAASE,QAAAA;AAAT,OAAV;AACD,KAJD;AAKAL,IAAAA,aAAa;AACd,GAZL,EAaI,SAASO,IAAT,CAAcC,GAAd,EAAmB;AACjB,QAAIA,GAAJ,EAAS;AACPC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,aAAO,OAAP;AACD;;AACDC,IAAAA,OAAO,CAACE,GAAR,CAAYjB,IAAZ;AACA,WAAOA,IAAP;AACD,GApBL;AAsBD,CAxBD;;AAyBAF,OAAO,CAACoB,KAAR,GAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACxB,MAAIC,OAAO,GAAG,KAAd;AACAzB,EAAAA,IAAI,CAAC,MAAD,CAAJ,CACGK,MADH,CACU;AACNC,IAAAA,IAAI,EAAE;AADA,GADV,EAIGC,QAJH,CAKI,SAASC,IAAT,CAAcC,OAAd,EAAuBC,aAAvB,EAAsC;AACpCD,IAAAA,OAAO,CAACE,OAAR,CAAgB,UAAUC,MAAV,EAAkB;AAChC,UAAIA,MAAM,CAACE,GAAP,CAAW,OAAX,MAAwBS,CAA5B,EACE,IAAIX,MAAM,CAACE,GAAP,CAAW,UAAX,MAA2BU,CAA/B,EAAkCC,OAAO,GAAG,IAAV;AACrC,KAHD;AAIAf,IAAAA,aAAa;AACd,GAXL,EAYI,SAASO,IAAT,CAAcC,GAAd,EAAmB;AACjB,QAAIA,GAAJ,EAAS;AACPC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,aAAO,OAAP;AACD;;AACDC,IAAAA,OAAO,CAACE,GAAR,CAAYI,OAAZ;AACD,GAlBL;AAoBAN,EAAAA,OAAO,CAACE,GAAR,CAAYI,OAAZ;AACA,SAAOA,OAAP;AACD,CAxBD","sourcesContent":["var Airtable = require(\"airtable\");\r\nvar base = new Airtable({ apiKey: \"keyXPG78PwXOJrDng\" }).base(\r\n  \"appMPBJSSa0nNGRQO\"\r\n);\r\n\r\nexports.getAllUsers = () => {\r\n  let data = [];\r\n  base(\"user\")\r\n    .select({\r\n      view: \"Grid view\",\r\n    })\r\n    .eachPage(\r\n      function page(records, fetchNextPage) {\r\n        records.forEach(function (record) {\r\n          let email = record.get(\"email\");\r\n          let password = record.get(\"password\");\r\n          data.push({ email, password });\r\n        });\r\n        fetchNextPage();\r\n      },\r\n      function done(err) {\r\n        if (err) {\r\n          console.error(err);\r\n          return \"error\";\r\n        }\r\n        console.log(data);\r\n        return data;\r\n      }\r\n    );\r\n};\r\nexports.login = (e, p) => {\r\n  let isValid = false;\r\n  base(\"user\")\r\n    .select({\r\n      view: \"Grid view\",\r\n    })\r\n    .eachPage(\r\n      function page(records, fetchNextPage) {\r\n        records.forEach(function (record) {\r\n          if (record.get(\"email\") === e)\r\n            if (record.get(\"password\") === p) isValid = true;\r\n        });\r\n        fetchNextPage();\r\n      },\r\n      function done(err) {\r\n        if (err) {\r\n          console.error(err);\r\n          return \"error\";\r\n        }\r\n        console.log(isValid);\r\n      }\r\n    );\r\n  console.log(isValid);\r\n  return isValid;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}